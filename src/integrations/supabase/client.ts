
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://itmicgkwzgzeqdwrisjz.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Iml0bWljZ2t3emd6ZXFkd3Jpc2p6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIzOTM4NTcsImV4cCI6MjA1Nzk2OTg1N30.oJsNH-Ge5x7OXPHeVGli2sYfpTQtwI0_vr2CsGmdhUo";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Create buckets if they don't exist
const createBuckets = async () => {
  try {
    // Check if videos bucket exists and create it if it doesn't
    const { data: videoBucketExists } = await supabase.storage.getBucket('videos');
    if (!videoBucketExists) {
      await supabase.storage.createBucket('videos', {
        public: true,
        fileSizeLimit: 104857600 // 100MB
      });
    }

    // Check if video thumbnails bucket exists and create it if it doesn't
    const { data: thumbnailBucketExists } = await supabase.storage.getBucket('video_thumbnails');
    if (!thumbnailBucketExists) {
      await supabase.storage.createBucket('video_thumbnails', {
        public: true,
        fileSizeLimit: 5242880 // 5MB
      });
    }
  } catch (error) {
    console.error('Error creating storage buckets:', error);
  }
};

// Call the function to create buckets
createBuckets();
